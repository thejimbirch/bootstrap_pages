<?php

/**
 * @file
 * Bootstrap Pages module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_theme().
 *
 * Look for these templates in the Bootstrap Pages module.
 */
function bootstrap_pages_theme($existing, $type, $theme, $path) {
  return [
    'field__bootstrap_pages_featured_image' => [
      'base hook' => 'node',
    ],
    'field__bootstrap_pages_related_articles' => [
      'base hook' => 'node',
    ],
    'node__bootstrap_pages_article' => [
      'base hook' => 'node',
    ],
    'node__bootstrap_pages_article__teaser' => [
      'base hook' => 'node',
    ],
    'node__bootstrap_pages_author' => [
      'base hook' => 'node',
    ],
    'node__bootstrap_pages_landing_page' => [
      'base hook' => 'node',
    ],
    'media__bootstrap_pages_featured_image' => [
      'base hook' => 'media',
    ],
  ];
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function bootstrap_pages_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.bootstrap_paragraphs':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}
